labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes")
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = as.data.frame(t(statistics["Total_Crimes",])),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = as.data.frame(t(statistics["Total_Crimes",])),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Line graph
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes")
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = as.data.frame(t(statistics["Total_Crimes",])),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = data.frame(statistics["Total_Crimes", ]),
aes(x = Mean), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = data.frame(statistics["Total_Crimes", ]),
aes(x = Mean), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = data.frame(statistics["Total_Crimes", ]),
aes(x = Mean), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +geom_histogram(data = data.frame(statistics["Total_Crimes", ]),
aes(x = Mean), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = as.data.frame(statistics["Total_Crimes", ]),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes")
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = as.data.frame(statistics["Mean", ]),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5) +
theme_bw()
View(statistics)
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = as.data.frame(statistics["Total_Crimes","Mean" ]),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5) +
theme_bw()
View(statistics)
# Ajuste do gráfico original
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes") +
# Adição do histograma
geom_histogram(data = as.data.frame(statistics["Total_Crimes","Mean" ]),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5)
# Adição do histograma
geom_histogram(data = as.data.frame(statistics["Total_Crimes","Mean" ]),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5) +
theme_bw()
# Adição do histograma
geom_histogram(data = as.data.frame(statistics["Total_Crimes","Mean" ]),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5)
# Adição do histograma
geom_histogram(data = as.data.frame(statistics["Total_Crimes","Mean" ]),
aes(x = Total_Crimes), fill = "lightgreen", alpha = 0.5)
View(dataReorganized)
View(statistics)
View(total_crimes_by_date)
View(total_crimes_by_date)
# Agregando o total de crimes por data
total_crimes_by_date <- dataReorganized %>%
group_by(Date) %>%
summarise(Total_Crimes = sum(Total_Crimes, na.rm = TRUE))
# Calculando a média de crimes por ano
mean_crimes_by_year <- dataReorganized %>%
group_by(Year) %>%
summarise(Mean_Crimes = mean(Total_Crimes, na.rm = TRUE))
# Gráfico de Linha com média por ano
ggplot() +
geom_line(data = total_crimes_by_date, aes(x = Date, y = Total_Crimes), color = "blue") +
geom_point(data = mean_crimes_by_year, aes(x = paste(Year, "-06-30", sep = ""), y = Mean_Crimes), color = "red", size = 3) +
labs(title = "Total de Crimes ao Longo do Tempo", x = "Data", y = "Total de Crimes")
View(total_crimes_by_date)
View(numeric_data)
View(statistics)
View(total_crimes_by_date)
View(statistics)
View(means_crimes)
View(mean_crimes_by_year)
# Line graph
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes/ Years", x = "Year", y = "Total Crimes")
# Gráfico de Linha com média por ano
ggplot() +
geom_line(data = total_crimes_by_date, aes(x = Date, y = Total_Crimes), color = "blue") +
geom_point(data = mean_crimes_by_year, aes(x = paste(Year, "-06-30", sep = ""), y = Mean_Crimes), color = "red", size = 3) +
labs(title = "Total de Crimes ao Longo do Tempo", x = "Data", y = "Total de Crimes")
dataReorganized <- data.frame(
Year = rep(2019:2021, each = 12),
Month = rep(month.name, 3),
Total_Crimes = sample(100:500, 36, replace = TRUE)
)
# Calculando a média de crimes por ano
mean_crimes_by_year <- dataReorganized %>%
group_by(Year) %>%
summarise(Mean_Crimes = mean(Total_Crimes, na.rm = TRUE))
# Gráfico de Linha com média por ano
ggplot(data = dataReorganized, aes(x = as.Date(paste(Year, Month, "01"), format = "%Y %B %d"), y = Total_Crimes)) +
geom_line(color = "blue") +
geom_point(data = mean_crimes_by_year, aes(x = as.Date(paste(Year, "06-30", sep = "-")), y = Mean_Crimes), color = "red", size = 3) +
labs(title = "Total de Crimes ao Longo do Tempo", x = "Data", y = "Total de Crimes")
View(mean_crimes_by_year)
View(mean_crimes_by_year)
View(total_crimes_by_date)
library(tidyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
# read the file
dataCrimes <- read.csv("C:/Users/charl/Desktop/classes/Data Exploration and Preparation/CA1/Crimes_in_Brazil_2015_2022.csv")
# Show 20 first
head(dataCrimes, 20)
dim(dataCrimes)
summary(dataCrimes)
# Reorganize the data
dataReorganized <- dataCrimes %>%
pivot_wider(names_from = `Tipo.Crime`, values_from = Ocorrências)
head(dataReorganized, 20)
#Translate the database titles from Portuguese to English
dataReorganized <- dataReorganized %>%
rename(
State = UF,
Year = Ano,
Month = Mês,
Rape = Estupro,
Vehicle_Theft = `Furto de veículo`,
Homicide = `Homicídio doloso`,
Bodily_injury_followed_by_death = `Lesão corporal seguida de morte`,
Robbery_Institution = `Roubo a instituição financeira`,
Cargo_Theft = `Roubo de carga`,
Vehicle_Robbery = `Roubo de veículo`,
Robbery_Followed_by_Death = `Roubo seguido de morte (latrocínio)`,
Attempted_Homicide = `Tentativa de homicídio`
)
# months translations
translation_dict <- c("janeiro" = "january",
"fevereiro" = "february",
"março" = "march",
"abril" = "april",
"maio" = "may",
"junho" = "june",
"julho" = "july",
"agosto" = "august",
"setembro" = "september",
"outubro" = "october",
"novembro" = "november",
"dezembro" = "december")
# replace the months from Portuguese to English
dataReorganized$Month <- translation_dict[dataReorganized$Month]
head(dataReorganized, 20)
# Find the mean of all crimes based in the states and month of a specific crime
means_crimes <- dataReorganized %>%
group_by(State, Month) %>%
summarise(across(c(Rape,
Vehicle_Theft, Homicide, Bodily_injury_followed_by_death,
Robbery_Institution, Cargo_Theft,Vehicle_Robbery,
Robbery_Followed_by_Death,
Attempted_Homicide), ~mean(., na.rm = TRUE), .names = "Mean_{.col}"))
# Replace NA values in the crime columns with the corresponding mean values, keeping only the columns with the results.
dataReorganized <- dataReorganized %>%
left_join(means_crimes, by = c("State", "Month")) %>%
mutate(across(c(Rape,
Vehicle_Theft, Homicide, Bodily_injury_followed_by_death,
Robbery_Institution, Cargo_Theft,Vehicle_Robbery,
Robbery_Followed_by_Death,
Attempted_Homicide), ~ifelse(is.na(.x), get(paste0("Mean_", cur_column())), .x)),
across(c(Rape,
Vehicle_Theft, Homicide, Bodily_injury_followed_by_death,
Robbery_Institution, Cargo_Theft, Vehicle_Robbery,
Robbery_Followed_by_Death,
Attempted_Homicide), ~as.integer(round(.)))) %>%
select(State, Year, Month, Rape, Vehicle_Theft, Homicide, Bodily_injury_followed_by_death,
Robbery_Institution, Cargo_Theft, Vehicle_Robbery, Robbery_Followed_by_Death, Attempted_Homicide)
# Add a column  "Total Crimes"
dataReorganized <- dataReorganized %>%
mutate(Total_Crimes = rowSums(select(., -State, -Year, -Month), na.rm = TRUE))
head(dataReorganized[, c('State', 'Year', 'Month', 'Total_Crimes')], 20)
# Calculando a soma total de crimes por ano usando aggregate
total_crimes_by_year <- aggregate(Total_Crimes ~ Year, data = dataReorganized, sum)
# Visualizando o resultado
print(total_crimes_by_year)
# Calculando a soma total de crimes por ano usando aggregate
total_crimes_by_year <- aggregate(Total_Crimes ~ Year, data = dataReorganized, sum)
# Visualizando o resultado
print(total_crimes_by_year)
statistics_by_year <- aggregate(Total_Crimes ~ Year, data = dataReorganized, function(x) {
c(Mean = mean(x, na.rm = TRUE),
Min = min(x, na.rm = TRUE),
Max = max(x, na.rm = TRUE))
})
# Unindo os resultados em um único conjunto de dados
total_crimes_by_year <- cbind(total_crimes_by_year, statistics_by_year[, -1])
# Visualizando o resultado
print(total_crimes_by_year)
ggplot(total_crimes_by_year, aes(x = Year, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes por Ano", x = "Ano", y = "Total de Crimes")
# Visualizando o resultado
print(total_crimes_by_year)
# Crie o gráfico de linha
ggplot(total_crimes_by_year, aes(x = Year, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes por Ano", x = "Ano", y = "Total de Crimes") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE))
ggplot(statistics_by_year, aes(x = Year)) +
geom_line(aes(y = Total_Crimes), color = "blue") +
geom_line(aes(y = Mean), color = "red") +
labs(title = "Total Crimes por Ano", x = "Ano", y = "Total de Crimes e Média")
View(statistics_by_year)
View(total_crimes_by_year)
ggplot(total_crimes_by_year, aes(x = Year)) +
geom_line(aes(y = Total_Crimes), color = "blue") +
geom_line(aes(y = Mean), color = "red") +
labs(title = "Total Crimes por Ano", x = "Ano", y = "Total de Crimes e Média")
")+
ggplot(total_crimes_by_year, aes(x = Year)) +
geom_line(aes(y = Total_Crimes), color = "blue") +
dataReorganized$Date <- as.Date(paste(dataReorganized$Year, dataReorganized$Month, "01"), format = "%Y %B %d")
# Agregando o total de crimes por data
total_crimes_by_date <- dataReorganized %>%
group_by(Date) %>%
summarise(Total_Crimes = sum(Total_Crimes, na.rm = TRUE))
# Gráfico de Linha
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total de Crimes ao Longo do Tempo", x = "Data", y = "Total de Crimes")
# Gráfico de Linha
ggplot(total_crimes_by_date, aes(x = Date, y = Total_Crimes)) +
geom_line() +
labs(title = "Total Crimes vs Year", x = "Date", y = "Total Crimes")
# Calcular a soma dos crimes por estado
total_crimes_by_state <- aggregate(Total_Crimes ~ State, data = dataReorganized, sum)
# Selecionar os 10 estados com mais crimes
top_10_states <- total_crimes_by_state[order(total_crimes_by_state$Total_Crimes, decreasing = TRUE), ][1:10, ]
# Plotar o pie chart dos 10 estados com mais crimes
ggplot(top_10_states, aes(x = "", y = Total_Crimes, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Mais Crimes", fill = "Estado") +
theme_void() +
theme(legend.position = "bottom") +
scale_fill_brewer(palette = "Set3")
library(scales)
# Calcular a soma dos crimes por estado
total_crimes_by_state <- aggregate(Total_Crimes ~ State, data = dataReorganized, sum)
# Selecionar os 10 estados com mais crimes
top_10_states <- total_crimes_by_state[order(total_crimes_by_state$Total_Crimes, decreasing = TRUE), ][1:10, ]
# Calcular as porcentagens
top_10_states$percentage <- scales::percent(top_10_states$Total_Crimes / sum(top_10_states$Total_Crimes))
# Plotar o pie chart dos 10 estados com mais crimes
ggplot(top_10_states, aes(x = "", y = Total_Crimes, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Mais Crimes", fill = "Estado") +
theme_void() +
theme(legend.position = "bottom") +
scale_fill_brewer(palette = "Set3") +
geom_text(aes(label = percentage), position = position_stack(vjust = 0.5), size = 3)
# Agregar os Total Crimes por estado
total_crimes_by_state <- aggregate(Total_Crimes ~ State, data = dataReorganized, sum)
# Ordenar os estados pela média dos crimes (Total_Crimes / quantidade de anos)
total_crimes_by_state <- total_crimes_by_state %>%
mutate(Mean = Total_Crimes / length(unique(dataReorganized$Year))) %>%
arrange(desc(Mean))
# Selecionar os 10 estados com a maior média de crimes
top_10_states <- head(total_crimes_by_state, 10)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Mean, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes")
# Mostrar o gráfico de pizza
print(pie_chart)
# Agregar os Total Crimes por estado
total_crimes_by_state <- aggregate(Total_Crimes ~ State, data = dataReorganized, sum)
# Ordenar os estados pela média dos crimes (Total_Crimes / quantidade de anos)
total_crimes_by_state <- total_crimes_by_state %>%
mutate(Mean = Total_Crimes / length(unique(dataReorganized$Year))) %>%
arrange(desc(Mean))
# Selecionar os 10 estados com a maior média de crimes
top_10_states <- head(total_crimes_by_state, 10)
# Adicionar a coluna de porcentagem
top_10_states <- top_10_states %>%
mutate(Percentage = Mean / sum(Mean) * 100)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0, display =FALSE) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Top 10 of Big mean") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# Mostrar o gráfico de pizza
print(pie_chart)
bar_chart <- ggplot(top_10_states, aes(x = State, y = Mean, fill = State)) +
geom_bar(stat = "identity") +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label = sprintf("%.2f", Mean)), position = position_stack(vjust = 0.5), size = 3) +
ylab("Média de Crimes") +
xlab("Estado") +
guides(fill = FALSE)
# Mostrar o gráfico de pizza
print(pie_chart)
# Mostrar o gráfico de pizza
print(bar_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5)) + # Ajustar o formato dos rótulos
scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1))  # Formatar para valores inteiros
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5)) + # Ajustar o formato dos rótulos
scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1))  # Formatar para valores inteiros
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5)) + # Ajustar o formato dos rótulos
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5)) + # Ajustar o formato dos rótulos
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5))  # Ajustar o formato dos rótulos
# Mostrar o gráfico de pizza
print(pie_chart)
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))),
position = position_stack(vjust = 0.5),
size = 3,
position = position_stack(vjust = 0.5))
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))),
position = position_stack(vjust = 0.5),
size = 3,
position = position_stack(vjust = 0.5)) + # Ajuste no tamanho e na posição dos rótulos
scale_y_continuous(labels = scales::percent_format(scale = 1, accuracy = 1))
# Mostrar o gráfico de pizza
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5))  # Ajustar o formato dos rótulos
# Mostrar o gráfico de pizza
print(pie_chart)
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5)) +
guides(fill = guide_legend(ncol = 2))  # Ajuste para separar os pedaços do gráfico
print(pie_chart)
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5)) +
guides(fill = guide_legend(ncol = 20))
print(pie_chart)
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5)) +
guides(fill = guide_legend(ncol = 3))
print(pie_chart)
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5)) +
guides(fill = guide_legend(ncol = 2))
print(pie_chart)
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 4.5)) +
guides(fill = guide_legend(ncol = 2))
print(pie_chart)
# Criar um gráfico de pizza mostrando os 10 estados com a maior média de crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 Estados com Maior Média de Crimes") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5))  # Ajustar o formato dos rótulos
# Mostrar o gráfico de pizza
print(pie_chart)
# Create a pie plot showing the top 10 mean of crimes
pie_chart <- ggplot(top_10_states, aes(x = "", y = Percentage, fill = State)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Top 10 States with high mean") +
geom_text(aes(label = paste0(round(Mean))), position = position_stack(vjust = 0.5))  # Ajustar o formato dos rótulos
print(pie_chart)
